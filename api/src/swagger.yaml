openapi: 3.0.0
info:
  title: Wrestling Management API
  description: API for managing wrestling promotions, events, wrestlers, and more
  version: 1.0.0
servers:
  - url: http://localhost:${API_PORT}
    description: Local development server
  - url: https://api.wrestling-management.com
    description: Production server

tags:
  - name: Authentication
    description: Public authentication endpoints
  - name: Belts
    description: Championship belts management
  - name: Cards
    description: Event cards management
  - name: Events
    description: Wrestling events management
  - name: Locations
    description: Venues management
  - name: Match Types
    description: Match types management
  - name: Matches
    description: Matches management
  - name: Promotions
    description: Wrestling promotions management
  - name: Tables
    description: Tables management
  - name: Wrestlers
    description: Wrestlers management

paths:
  /public/login:
    post:
      tags: [Authentication]
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required: [username, password]
      responses:
        200:
          description: Successful login
        401:
          description: Unauthorized

  /public/register:
    post:
      tags: [Authentication]
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
              required: [username, password, email]
      responses:
        201:
          description: User created
        400:
          description: Bad request

  /hello:
    get:
      tags: [Authentication]
      summary: Simple hello endpoint
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful response

  /belts:
    get:
      tags: [Belts]
      summary: Get all belts
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of belts
    post:
      tags: [Belts]
      summary: Create a new belt
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Belt'
      responses:
        201:
          description: Belt created

  /belts/{id}:
    get:
      tags: [Belts]
      summary: Get a belt by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Belt details
        404:
          description: Belt not found
    put:
      tags: [Belts]
      summary: Update a belt
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Belt'
      responses:
        200:
          description: Belt updated
        404:
          description: Belt not found
    delete:
      tags: [Belts]
      summary: Delete a belt
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        204:
          description: Belt deleted
        404:
          description: Belt not found

  /cards:
    get:
      tags: [Cards]
      summary: Get all cards
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of cards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        500:
          description: Internal server error
    post:
      tags: [Cards]
      summary: Create a new card
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        201:
          description: Card created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        400:
          description: Bad request
        500:
          description: Internal server error

  /cards/{id}:
    get:
      tags: [Cards]
      summary: Get a card by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Card details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        404:
          description: Card not found
        500:
          description: Internal server error
    put:
      tags: [Cards]
      summary: Update a card
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        200:
          description: Card updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
        400:
          description: Bad request
        404:
          description: Card not found
        500:
          description: Internal server error
    delete:
      tags: [Cards]
      summary: Delete a card
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Card deleted
        404:
          description: Card not found
        500:
          description: Internal server error

  /events:
    get:
      tags: [Events]
      summary: Get all events
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        500:
          description: Internal server error
    post:
      tags: [Events]
      summary: Create a new event
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        201:
          description: Event created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        400:
          description: Bad request
        500:
          description: Internal server error

  /events/{id}:
    get:
      tags: [Events]
      summary: Get an event by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        404:
          description: Event not found
        500:
          description: Internal server error
    put:
      tags: [Events]
      summary: Update an event
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        200:
          description: Event updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        400:
          description: Bad request
        404:
          description: Event not found
        500:
          description: Internal server error
    delete:
      tags: [Events]
      summary: Delete an event
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Event deleted
        404:
          description: Event not found
        500:
          description: Internal server error

  /locations:
    get:
      tags: [Locations]
      summary: Get all locations
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
        500:
          description: Internal server error
    post:
      tags: [Locations]
      summary: Create a new location
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        201:
          description: Location created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        400:
          description: Bad request
        500:
          description: Internal server error

  /locations/{id}:
    get:
      tags: [Locations]
      summary: Get a location by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Location details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        404:
          description: Location not found
        500:
          description: Internal server error
    put:
      tags: [Locations]
      summary: Update a location
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        200:
          description: Location updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        400:
          description: Bad request
        404:
          description: Location not found
        500:
          description: Internal server error
    delete:
      tags: [Locations]
      summary: Delete a location
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Location deleted
        404:
          description: Location not found
        500:
          description: Internal server error

  /matches:
    get:
      tags: [Matches]
      summary: Get all matches
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of matches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
        500:
          description: Internal server error
    post:
      tags: [Matches]
      summary: Create a new match
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        201:
          description: Match created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        400:
          description: Bad request
        500:
          description: Internal server error

  /matches/{id}:
    get:
      tags: [Matches]
      summary: Get a match by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Match details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        404:
          description: Match not found
        500:
          description: Internal server error
    put:
      tags: [Matches]
      summary: Update a match
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        200:
          description: Match updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        400:
          description: Bad request
        404:
          description: Match not found
        500:
          description: Internal server error
    delete:
      tags: [Matches]
      summary: Delete a match
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Match deleted
        404:
          description: Match not found
        500:
          description: Internal server error

  /matchTypes:
    get:
      tags: [Match Types]
      summary: Get all match types
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of match types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MatchType'
        500:
          description: Internal server error
    post:
      tags: [Match Types]
      summary: Create a new match type
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchType'
      responses:
        201:
          description: Match type created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchType'
        400:
          description: Bad request
        500:
          description: Internal server error

  /matchTypes/{id}:
    get:
      tags: [Match Types]
      summary: Get a match type by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Match type details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchType'
        404:
          description: Match type not found
        500:
          description: Internal server error
    put:
      tags: [Match Types]
      summary: Update a match type
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchType'
      responses:
        200:
          description: Match type updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchType'
        400:
          description: Bad request
        404:
          description: Match type not found
        500:
          description: Internal server error
    delete:
      tags: [Match Types]
      summary: Delete a match type
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Match type deleted
        404:
          description: Match type not found
        500:
          description: Internal server error

  /promotions:
    get:
      tags: [Promotions]
      summary: Get all promotions
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of promotions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Promotion'
        500:
          description: Internal server error
    post:
      tags: [Promotions]
      summary: Create a new promotion
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
      responses:
        201:
          description: Promotion created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        400:
          description: Bad request
        500:
          description: Internal server error

  /promotions/{id}:
    get:
      tags: [Promotions]
      summary: Get a promotion by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Promotion details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        404:
          description: Promotion not found
        500:
          description: Internal server error
    put:
      tags: [Promotions]
      summary: Update a promotion
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
      responses:
        200:
          description: Promotion updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        400:
          description: Bad request
        404:
          description: Promotion not found
        500:
          description: Internal server error
    delete:
      tags: [Promotions]
      summary: Delete a promotion
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Promotion deleted
        404:
          description: Promotion not found
        500:
          description: Internal server error

  /tables:
    get:
      tags: [Tables]
      summary: Get all tables
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of tables
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Table'
        500:
          description: Internal server error
    post:
      tags: [Tables]
      summary: Create a new table
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        201:
          description: Table created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        400:
          description: Bad request
        500:
          description: Internal server error

  /tables/{id}:
    get:
      tags: [Tables]
      summary: Get a table by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Table details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        404:
          description: Table not found
        500:
          description: Internal server error
    put:
      tags: [Tables]
      summary: Update a table
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        200:
          description: Table updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        400:
          description: Bad request
        404:
          description: Table not found
        500:
          description: Internal server error
    delete:
      tags: [Tables]
      summary: Delete a table
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Table deleted
        404:
          description: Table not found
        500:
          description: Internal server error

  /wrestlers:
    get:
      tags: [Wrestlers]
      summary: Get all wrestlers
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of wrestlers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wrestler'
        500:
          description: Internal server error
    post:
      tags: [Wrestlers]
      summary: Create a new wrestler
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wrestler'
      responses:
        201:
          description: Wrestler created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wrestler'
        400:
          description: Bad request
        500:
          description: Internal server error

  /wrestlers/{id}:
    get:
      tags: [Wrestlers]
      summary: Get a wrestler by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Wrestler details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wrestler'
        404:
          description: Wrestler not found
        500:
          description: Internal server error
    put:
      tags: [Wrestlers]
      summary: Update a wrestler
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wrestler'
      responses:
        200:
          description: Wrestler updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wrestler'
        400:
          description: Bad request
        404:
          description: Wrestler not found
        500:
          description: Internal server error
    delete:
      tags: [Wrestlers]
      summary: Delete a wrestler
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Wrestler deleted
        404:
          description: Wrestler not found
        500:
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Belt:
      type: object
      properties:
        name:
          type: string
        promotion:
          type: string
        currentHolder:
          type: string
        dateWon:
          type: string
          format: date
      required: [name, promotion]

    Card:
      type: object
      properties:
        id:
          type: integer
        table_id:
          type: integer
          nullable: true
        location_id:
          type: integer
          nullable: true
        promotion_id:
          type: integer
          nullable: true
        event_date:
          type: string
          format: date-time
          nullable: true
        event_id:
          type: integer
          nullable: true
        url:
          type: string
          nullable: true
        info_html:
          type: string
          nullable: true
        match_html:
          type: string
          nullable: true
      required: [id]

    Event:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        date:
          type: string
          format: date-time
        location_id:
          type: integer
          nullable: true
        promotion_id:
          type: integer
          nullable: true
      required: [id, name, date]

    Location:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        city:
          type: string
        country:
          type: string
        capacity:
          type: integer
      required: [id, name, city, country]

    MatchType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: true
      required: [id]

    Match:
      type: object
      properties:
        id:
          type: integer
        eventId:
          type: integer
        matchType:
          type: string
        participants:
          type: array
          items:
            type: string
        winner:
          type: string
          nullable: true
        duration:
          type: integer
          nullable: true
      required: [id, eventId, matchType, participants]

    Promotion:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: true
      required: [id]

    Table:
      type: object
      properties:
        id:
          type: integer
        html:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      required: [id]

    Wrestler:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        birthDate:
          type: string
          format: date
        height:
          type: integer
        weight:
          type: integer
        promotion:
          type: string
      required: [id, name, birthDate]